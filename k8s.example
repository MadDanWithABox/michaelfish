apiVersion: v1
kind: Namespace
metadata:
  name: dj-connex

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fishscales
  namespace: dj-connex
spec:
  replicas: 4
  selector:
    matchLabels:
      app: fishscales
  template:
    metadata:
      labels:
        app: fishscales
    spec:
      containers:
      - name: michaelfish-container
        image: katana/michaelfish-fastapi
        ports:
        - containerPort: 8000
        env:
        - name: VERBOSE
          value: "1"
        - name: DATA_PATH
          value: "/data.csv"
        livenessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: fishscales-service
  namespace: dj-connex
spec:
  selector:
    app: fishscales
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: fishscales-nodeport
  namespace: dj-connex
spec:
  selector:
    app: fishscales
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      nodePort: 31000
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fishscales-ingress
  namespace: dj-connex
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fishscales-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fishscales-hpa
  namespace: dj-connex
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fishscales
  minReplicas: 4
  maxReplicas: 10
  metrics:
  - type: Pods
    pods:
      metric:
        name: http_requests_per_minute
      target:
        type: AverageValue
        averageValue: "100"
